#include "encoding.out.h"
// #define _INSTR_(name, type, code)

#define RS1 (instr.rs1)
#define RS2 (instr.rs2)
#define RD (instr.rd)
#define IMM (instr.imm)
#define REG(reg) (heart->get_reg(reg))
#define SET_REG(reg, val) (heart->set_reg(reg, val))

#define CODE_BIN_IU(op) SET_REG(RD, REG(RS1) op IMM);
#define CODE_BIN_IS(op) SET_REG(RD, ((int64_t)REG(RS1)) op ((int64_t)IMM));

_INSTR_(SLTI, I, {CODE_BIN_IS(<)})
_INSTR_(SLTIU, I, {CODE_BIN_IU(<)})
_INSTR_(ADDI, I, {CODE_BIN_IU(+)})
_INSTR_(ANDI, I, {CODE_BIN_IU(&)})
_INSTR_(ORI, I, {CODE_BIN_IU(|)})
_INSTR_(XORI, I, {CODE_BIN_IU(^)})
_INSTR_(SLLI, I, {})
_INSTR_(SRLI, I, {})
_INSTR_(SRAI, I, {})
_INSTR_(SLLIW, I, {})
_INSTR_(SRLIW, I, {})
_INSTR_(SRAIW, I, {})
_INSTR_(LUI, U, {})
_INSTR_(AUIPC, U, {})
_INSTR_(ADD, R, {})
_INSTR_(SLT, R, {})
_INSTR_(SLTU, R, {})
_INSTR_(AND, R, {})
_INSTR_(OR, R, {})
_INSTR_(XOR, R, {})
_INSTR_(SLL, R, {})
_INSTR_(SRL, R, {})
_INSTR_(SUB, R, {})
_INSTR_(SRA, R, {})
_INSTR_(SLLW, R, {})
_INSTR_(SRLW, R, {})
_INSTR_(SUBW, R, {})
_INSTR_(SRAW, R, {})
_INSTR_(ADDW, R, {})
_INSTR_(JAL, J, {})
_INSTR_(JALR, J, {})
_INSTR_(BEQ, B, {})
_INSTR_(BNE, B, {})
_INSTR_(BLT, B, {})
_INSTR_(BLTU, B, {})
_INSTR_(BGE, B, {})
_INSTR_(BGEU, B, {})
_INSTR_(FENCE, I, {})
_INSTR_(FENCE_I, I, {})
_INSTR_(ADDIW, I, {})
_INSTR_(LW, S, {})
_INSTR_(LH, S, {})
_INSTR_(LHU, S, {})
_INSTR_(LB, S, {})
_INSTR_(LBU, S, {})
_INSTR_(SW, S, {})
_INSTR_(SH, S, {})
_INSTR_(SB, S, {})
